// Entry point: wire everything together with improved initialization
(function(){
  // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ core –º–æ–¥—É–ª—è
  function waitForCore() {
    return new Promise((resolve) => {
      const check = () => {
        if (window.App && window.App.ModuleManager) {
          resolve();
        } else {
          setTimeout(check, 50);
        }
      };
      check();
    });
  }

  // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  async function initializeDashboard() {
    try {
      console.log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –¥–∞—à–±–æ—Ä–¥–∞...");
      
      const ModuleManager = window.App.ModuleManager;
      const util = window.App.util;
      
      if (!ModuleManager || !util) {
        throw new Error('Core –º–æ–¥—É–ª—å –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      }

      // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –ª–æ–≥–æ–≤
      const DEBUG = (localStorage.getItem('debug') === '1');
      if (!DEBUG) {
        try { console.log = function(){}; } catch (e) {} 
      }

      // 1. –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –¢–ï–ú–´ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 100)
      ModuleManager.addToInitQueue(async () => {
        console.log("üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã...");
        if (App.theme && App.theme.initTheme) {
          App.theme.initTheme();
          console.log("‚úÖ –¢–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞");
        } else {
          console.warn('‚ö†Ô∏è App.theme.initTheme –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
      }, 100);

      // 2. –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø UI –ö–û–ú–ü–û–ù–ï–ù–¢–û–í (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 90)
      ModuleManager.addToInitQueue(async () => {
        console.log("üé≠ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...");
        
        // Tabs ink init & listeners
        if (App.ui && App.ui.updateTabsInk) {
          App.ui.updateTabsInk();
          window.addEventListener('resize', util.debounce(App.ui.updateTabsInk, 100));
          
          const viewTabs = document.getElementById("viewTabs");
          if (viewTabs) {
            viewTabs.addEventListener('click', e=>{ 
              if(e.target.closest('.nav-link')) {
                setTimeout(() => {
                  if (App.ui && App.ui.updateTabsInk) {
                    App.ui.updateTabsInk();
                  }
                }, 0); 
              }
            });
            
            const navLinks = viewTabs.querySelectorAll('.nav-link');
            navLinks.forEach(btn=>{ 
              btn.addEventListener('shown.bs.tab', () => {
                if (App.ui && App.ui.updateTabsInk) {
                  App.ui.updateTabsInk();
                }
              }); 
            });
            
            viewTabs.addEventListener('scroll', util.debounce(() => {
              if (App.ui && App.ui.updateTabsInk) {
                App.ui.updateTabsInk();
              }
            }, 50));
          }
        }

        // Visual enhancers
        if (App.ui && App.ui.initEnhancers) {
          App.ui.initEnhancers();
        }
        
        if (App.ui && App.ui.initTabAnimations) {
          App.ui.initTabAnimations();
        }
        
        if (App.ui && App.ui.initBootstrapComponents) {
          App.ui.initBootstrapComponents();
        }

        // Randomize skeletons
        if (App.ui && App.ui.randomizeSkeletons) {
          App.ui.randomizeSkeletons();
        }

        console.log("‚úÖ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã");
      }, 90);

      // 3. –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø API –ò–ù–§–û–†–ú–ê–¶–ò–ò (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 80)
      ModuleManager.addToInitQueue(async () => {
        console.log("üì° –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏...");
        
        if (App.apiInfo && App.apiInfo.startApiInfoTimer) {
          App.apiInfo.startApiInfoTimer();
        }

        // –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–∏–Ω–≥–∞ —Å –ø–∞—É–∑–æ–π –ø—Ä–∏ —Å–∫—Ä—ã—Ç–∏–∏ –≤–∫–ª–∞–¥–∫–∏
        if (util.pingHealth) {
          let _pingTimer = null;
          const startPing = () => {
            if (_pingTimer) { clearInterval(_pingTimer); _pingTimer = null; }
            // –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–∏–Ω–≥
            try { util.pingHealth(); } catch (e) {}
            // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π –ø–∏–Ω–≥ —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –≤–∫–ª–∞–¥–∫–∞ –≤–∏–¥–∏–º–∞
            _pingTimer = setInterval(() => {
              if (document.visibilityState === 'visible') {
                try { util.pingHealth(); } catch (e) {}
              }
            }, 5000);
          };
          const stopPing = () => { if (_pingTimer) { clearInterval(_pingTimer); _pingTimer = null; } };
          startPing();
          document.addEventListener('visibilitychange', () => {
            if (document.visibilityState === 'visible') startPing(); else stopPing();
          });
        }

        console.log("‚úÖ API –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞");
      }, 80);

      // 4. –ù–ê–°–¢–†–û–ô–ö–ê –≠–õ–ï–ú–ï–ù–¢–û–í –£–ü–†–ê–í–õ–ï–ù–ò–Ø (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 70)
      ModuleManager.addToInitQueue(async () => {
        console.log("üéõÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è...");
        
        // Chart controls
        if(App.chart && App.chart.setupChartControls) {
          App.chart.setupChartControls();
        }
        if(App.chart && App.chart.applyAutoControlsFromStorage) {
          App.chart.applyAutoControlsFromStorage();
        }
        if(App.chart && App.chart.setupAdvancedControls) {
          App.chart.setupAdvancedControls();
        }

        // Logs controls
        if(App.logs && App.logs.setupLogsControls) {
          App.logs.setupLogsControls();
        }
        if(App.logs && App.logs.setupLogsAllControls) {
          App.logs.setupLogsAllControls();
        }

        // CSV controls
        if(App.csv && App.csv.setupCsvPreviewControls) {
          App.csv.setupCsvPreviewControls();
        }

        console.log("‚úÖ –≠–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã");
      }, 70);

      // 5. –ù–ê–°–¢–†–û–ô–ö–ê –ì–õ–û–ë–ê–õ–¨–ù–´–• –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 60)
      ModuleManager.addToInitQueue(async () => {
        console.log("üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...");
        
        // Global refresh & positions actions
        const refreshAll = $("#refreshAll");
        if (refreshAll && refreshAll.length) {
          refreshAll.on("click", async ()=>{ 
            try {
              if(App.chart && App.chart.drawChart) {
                await Promise.all([
                  App.state && App.state.loadState ? App.state.loadState() : Promise.resolve(),
                  App.chart.drawChart(false), 
                  App.logs && App.logs.loadLogTail ? App.logs.loadLogTail() : Promise.resolve(),
                  App.logs && App.logs.loadLogsAll ? App.logs.loadLogsAll() : Promise.resolve(),
                  App.csv && App.csv.loadCsvPreview ? App.csv.loadCsvPreview() : Promise.resolve()
                ]); 
                if(App.chart.startFabCountdown) App.chart.startFabCountdown(); 
              }
              if (util.showSnack) {
                util.showSnack("–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"); 
              }
            } catch (e) {
              console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', e);
              if (util.showSnack) {
                util.showSnack("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"); 
              }
            }
          });
        }
        
        const posRefresh = $("#posRefresh");
        if (posRefresh && posRefresh.length) {
          posRefresh.on("click", ()=>{ 
            if (App.state && App.state.loadState) {
              App.state.loadState();
            }
            if (util.showSnack) {
              util.showSnack("–ü–æ–∑–∏—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"); 
            }
          });
        }
        
        const posExport = $("#posExport");
        if (posExport && posExport.length) {
          posExport.on("click", () => {
            if (App.state && App.state.exportPositionsCsv) {
              App.state.exportPositionsCsv();
            }
          });
        }

        // Chart tab activation handler
        const chartTab = document.getElementById("chart-tab");
        if (chartTab) {
          chartTab.addEventListener("shown.bs.tab", ()=>{ 
            if(App.chart && App.chart.startChartTimer) App.chart.startChartTimer(); 
            if(App.chart && App.chart.drawChart) App.chart.drawChart(false); 
          });
        }

        // Humanize update on visibility change
        document.addEventListener("visibilitychange", ()=>{ 
          if(document.visibilityState==="visible" && util && util.humanizeUpdated){ 
            const kpiUpdated = $("#kpi-updated");
            if (kpiUpdated && kpiUpdated.length) {
              const iso = kpiUpdated.data("iso"); 
              kpiUpdated.text(util.humanizeUpdated(iso)); 
            }
          } 
        });

        console.log("‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã");
      }, 60);

      // 6. –ó–ê–ì–†–£–ó–ö–ê –ù–ê–ß–ê–õ–¨–ù–´–• –î–ê–ù–ù–´–• (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 50)
      ModuleManager.addToInitQueue(async () => {
        console.log("üìä –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...");
        
        try {
          await Promise.all([
            App.chart && App.chart.loadCsvList ? App.chart.loadCsvList() : Promise.resolve(),
            App.logs && App.logs.loadLogFiles ? App.logs.loadLogFiles() : Promise.resolve(),
            App.state && App.state.loadState ? App.state.loadState() : Promise.resolve()
          ]);

          // –ü–µ—Ä–≤—ã–π –≥—Ä–∞—Ñ–∏–∫ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
          if(App.chart && App.chart.drawChart) {
            await App.chart.drawChart(true);
          }

          // –ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ–≥–æ–≤
          if(App.logs && App.logs.loadLogTail) {
            await App.logs.loadLogTail();
          }
          if(App.logs && App.logs.loadLogsAll) {
            await App.logs.loadLogsAll();
          }

          console.log("‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã");
        } catch (e) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', e);
        }
      }, 50);

      // 7. –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –°–ü–ï–¶–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–´–• –ú–û–î–£–õ–ï–ô (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 40)
      ModuleManager.addToInitQueue(async () => {
        console.log("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π...");
        
        // Strategy Voting
        if (App.strategyVoting && App.strategyVoting.init) {
          App.strategyVoting.init();
        }
        
        // KPI
        if (App.kpi && App.kpi.init) {
          App.kpi.init();
        }

        console.log("‚úÖ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã");
      }, 40);

      // 8. –ó–ê–ü–£–°–ö –¢–ê–ô–ú–ï–†–û–í (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 30)
      ModuleManager.addToInitQueue(async () => {
        console.log("‚è∞ –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–æ–≤...");
        
        if(App.chart && App.chart.startChartTimer) {
          App.chart.startChartTimer();
        }
        if(App.chart && App.chart.startFabCountdown) {
          App.chart.startFabCountdown();
        }
        if(App.state && App.state.startStateTimer) {
          App.state.startStateTimer();
        }

        console.log("‚úÖ –¢–∞–π–º–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã");
      }, 30);

      // 9. –§–ò–ù–ê–õ–¨–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 20)
      ModuleManager.addToInitQueue(async () => {
        console.log("üéØ –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞...");
        
        // –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        window.addEventListener('beforeunload', () => {
          try {
            if(App.chart && App.chart.cleanup) App.chart.cleanup();
            if(App.logs && App.logs.cleanup) App.logs.cleanup();
            if(App.state && App.state.cleanup) App.state.cleanup();
            if(App.csv && App.csv.cleanup) App.csv.cleanup();
            if(App.ui && App.ui.cleanup) App.ui.cleanup();
            if(App.theme && App.theme.cleanup) App.theme.cleanup();
            if(App.util && App.util.cleanup) App.util.cleanup();
            if(App.apiInfo && App.apiInfo.cleanup) App.apiInfo.cleanup();
            if(App.strategyVoting && App.strategyVoting.cleanup) App.strategyVoting.cleanup();
            if(App.kpi && App.kpi.cleanup) App.kpi.cleanup();
          } catch (e) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Ä–µ—Å—É—Ä—Å–æ–≤:', e);
          }
        });

        // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–æ–≤ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É
        document.addEventListener('visibilitychange', () => {
          if (document.visibilityState === 'visible') {
            try {
              if(App.chart && App.chart.startChartTimer) App.chart.startChartTimer();
              if(App.state && App.state.startStateTimer) App.state.startStateTimer();
            } catch (e) {
              console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ —Ç–∞–π–º–µ—Ä–æ–≤:', e);
            }
          }
        });

        console.log("‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
      }, 20);

      // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
      console.log("üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥—É–ª–µ–π...");
      await ModuleManager.executeInit();
      
      console.log("üéâ –î–∞—à–±–æ—Ä–¥ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!");
      
    } catch (e) {
      console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞—à–±–æ—Ä–¥–∞:', e);
    }
  }

  // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ core –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
  waitForCore().then(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
    if (typeof window.App === 'undefined') {
      console.error('‚ùå App –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É core.js');
      return;
    }
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    initializeDashboard();
  }).catch(e => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–∂–∏–¥–∞–Ω–∏—è core –º–æ–¥—É–ª—è:', e);
  });

})();
